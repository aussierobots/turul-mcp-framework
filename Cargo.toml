[workspace]
resolver = "3"
members = [
    # Core crates
    "crates/turul-mcp-json-rpc-server",
    "crates/turul-mcp-protocol-2025-06-18",
    "crates/turul-mcp-protocol",
    "crates/turul-mcp-session-storage",
    "crates/turul-http-mcp-server",
    "crates/turul-mcp-server",
    "crates/turul-mcp-derive",
    "crates/turul-mcp-client",
    "crates/turul-mcp-builders",
    "crates/turul-mcp-aws-lambda",
    
    # Test crates

    # Active examples (34 total)
    "examples/alert-system-server",
    "examples/audit-trail-server",
    "examples/builders-showcase",
    "examples/calculator-add-builder-server",
    "examples/calculator-add-function-server",
    "examples/calculator-add-manual-server",
    "examples/calculator-add-simple-server-derive",
    "examples/completion-server",
    "examples/comprehensive-server",
    "examples/derive-macro-server",
    "examples/dynamic-resource-server",
    "examples/elicitation-server",
    "examples/function-macro-server",
    "examples/function-resource-server",
    "examples/lambda-mcp-client",
    "examples/lambda-mcp-server",
    "examples/manual-tools-server",
    "examples/minimal-server",
    "examples/notification-server",
    "examples/pagination-server",
    "examples/performance-testing",
    "examples/prompts-server",
    "examples/prompts-test-server",
    "examples/resource-server",
    "examples/resource-test-server",
    "examples/resources-server",
    "examples/sampling-server",
    "examples/simple-dynamodb-session", # Simplified and ready - utility binaries commented out
    "examples/simple-logging-server", 
    "examples/simple-postgres-session", # Fixed API mismatches - ready to use
    "examples/simple-sqlite-session", # Fixed API mismatches - ready to use
    "examples/stateful-server",
    "examples/tools-test-server",
    "examples/zero-config-getting-started",
    "examples/lambda-mcp-server",
    
    # Moved from turul-mcp-server/examples
    "examples/client-initialise-server",
    "examples/client-initialise-report", 
    "examples/logging-test-client",
    "examples/logging-test-server",
    "examples/session-aware-logging-demo",
    "examples/session-logging-proof-test",
    "examples/session-management-compliance-test",

    # Tests
    "tests",
    "tests/resources", 
    "tests/prompts",
    "tests/tools",
]

exclude = [
    # AWS examples for future phase - re-enabled for 0.2.0
]

[workspace.package]
version = "0.2.0"
edition = "2024"
authors = ["Nick Hortovanyi <nick@aussierobots.com.au>"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/aussierobots/turul-mcp-framework"
homepage = "https://github.com/aussierobots/turul-mcp-framework"

[workspace.dependencies]
# Core dependencies shared across crates
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yml = "0.0.12"
thiserror = "2.0"
async-trait = "0.1"
async-stream = "0.3"
futures = "0.3"
tracing = "0.1"
lazy_static = "1"

# HTTP/Server dependencies
tokio = { version = "1", features = ["full"] }
hyper = { version = "1.7", features = ["full"] }
hyper-util = { version = "0.1", features = ["full"] }
tower = { version = "0.5", features = ["full"] }
tower-http = { version = "0.6", features = ["full"] }
tokio-stream = { version = "0.1", features = ["full"] }

http = "1.3"
http-body-util = "0.1"
http-body = "1"
bytes = "1"

# Internal crate dependencies
turul-mcp-json-rpc-server = { path = "crates/turul-mcp-json-rpc-server" }
turul-mcp-protocol-2025-06-18 = { path = "crates/turul-mcp-protocol-2025-06-18" }
turul-mcp-protocol = { path = "crates/turul-mcp-protocol" }
turul-mcp-session-storage = { path = "crates/turul-mcp-session-storage" }
turul-http-mcp-server = { path = "crates/turul-http-mcp-server" }
turul-mcp-server = { path = "crates/turul-mcp-server" }
turul-mcp-derive = { path = "crates/turul-mcp-derive" }
turul-mcp-client = { path = "crates/turul-mcp-client" }
turul-mcp-builders = { path = "crates/turul-mcp-builders" }

# Additional dependencies for examples and tests
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
uuid = { version = "1.18", features = ["v4", "v7", "serde"] }
tokio-test = "0.4"
reqwest = { version = "0.12", features = ["json"] }
chrono = { version = "0.4", features = ["serde"] }
anyhow = "1.0"
clap = { version = "4", features = ["derive"] }
criterion = { version = "0.7", features = ["html_reports", "async_tokio"] }
sqlx = { version = "0.8", features = [
    "runtime-tokio-rustls",
    "sqlite",
    "postgres",
    "chrono",
    "uuid",
] }
tempfile = "3"
toml = "0.9"
regex = "1.11"
base64 = "0.22"
urlencoding = "2.1"

# AWS SDK dependencies
aws-config = "1.8"
aws-sdk-dynamodb = "1"
aws-sdk-sqs = "1"
aws-sdk-sns = "1"

# AWS Lambda dependencies
lambda_runtime = "0.14"
lambda_http = "0.17"
lambda-web = "0.2"
aws_lambda_events = "0.18"

# Other dependencies
url = "2.5"
parking_lot = "0.12"
rand = "0.9"
tracing-test = "0.2"
pin-project = "1"

# YAML processing
serde_yaml = "0.9"

[profile.release]
lto = true
codegen-units = 1
panic = "abort"

