[package]
name = "lambda-turul-mcp-server"
version = "0.1.1"
edition.workspace = true
description = "AWS Lambda serverless MCP server using mcp-framework components"
license = "MIT"

[[bin]]
name = "lambda-turul-mcp-server"
path = "src/main.rs"

[dependencies]
# Lambda runtime with streaming support
lambda_http.workspace = true
lambda_runtime.workspace = true

# AWS SDK for DynamoDB, SNS, SQS integration
aws-config.workspace = true
aws-sdk-dynamodb.workspace = true
aws-sdk-sns.workspace = true
aws-sdk-sqs.workspace = true

# Our MCP framework
turul-mcp-server = { path = "../../crates/turul-mcp-server" }
turul-mcp-protocol = { path = "../../crates/turul-mcp-protocol" }
turul-mcp-derive = { path = "../../crates/turul-mcp-derive" }
turul-mcp-session-storage = { path = "../../crates/turul-mcp-session-storage", features = ["dynamodb"] }
turul-mcp-builders = { path = "../../crates/turul-mcp-builders" }
turul-http-mcp-server = { path = "../../crates/turul-http-mcp-server" }
turul-mcp-json-rpc-server = { workspace = true }
turul-mcp-aws-lambda = { path = "../../crates/turul-mcp-aws-lambda" }
async-trait = { workspace = true }

# Tower middleware for Lambda
tower = { workspace = true }
tower-http = { workspace = true }

# HTTP and JSON handling
serde = { workspace = true }
serde_json = { workspace = true }
uuid = { workspace = true }
# HTTP and Hyper support for streaming
http = { workspace = true }
hyper = { workspace = true }
http-body-util = { workspace = true }
bytes = { workspace = true }

# Date/time handling
chrono = { workspace = true }

# Async runtime
tokio = { workspace = true }
futures = { workspace = true }

# Error handling and logging
anyhow = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# URL encoding for SSE parameters
urlencoding = { workspace = true }

# Additional dependencies for tools
md5 = "0.7"

[dev-dependencies]
tokio-test.workspace = true

[features]
default = ["lambda"]
lambda = []
local = []
