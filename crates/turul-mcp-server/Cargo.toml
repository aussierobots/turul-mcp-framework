[package]
name = "turul-mcp-server"
version = "0.1.0"
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
description = "High-level framework for building Model Context Protocol (MCP) servers"

[features]
default = ["http", "sse", "sqlite", "postgres", "dynamodb"]
http = ["turul-http-mcp-server"]
sse = ["turul-http-mcp-server/sse"]
postgres = ["turul-mcp-session-storage/postgres"]
sqlite = ["turul-mcp-session-storage/sqlite"]
dynamodb = ["turul-mcp-session-storage/dynamodb"]

[dependencies]
# Framework dependencies
turul-mcp-json-rpc-server.workspace = true
turul-mcp-protocol.workspace = true
turul-mcp-protocol-2025-06-18.workspace = true
turul-mcp-session-storage.workspace = true
turul-http-mcp-server = { workspace = true, optional = true }

# Core dependencies
serde.workspace = true
serde_json.workspace = true
async-trait.workspace = true
thiserror.workspace = true
futures.workspace = true
tracing.workspace = true
tokio.workspace = true
uuid = { workspace = true, features = ["v4", "v7"] }
chrono = { workspace = true, features = ["serde"] }

[dev-dependencies]
tokio = { workspace = true, features = ["test-util"] }
# Dependencies for examples
anyhow.workspace = true
clap.workspace = true
reqwest.workspace = true
tracing-subscriber.workspace = true
chrono.workspace = true
futures.workspace = true

[[example]]
name = "client-initialise-server"
path = "examples/client-initialise-server.rs"

[[example]]
name = "client-initialise-report"
path = "examples/client-initialise-report.rs"
